{
  "name": "oexchange",
  "version": "0.1.1",
  "description": "Module that handles OExchange host discovery",
  "homepage": "https://github.com/bashofmann/node_oexchange",
  "keywords": [
    "oexchange"
  ],
  "author": {
    "name": "Bastian Hofmann",
    "email": "bashofmann@googlemail.com"
  },
  "contributors": [],
  "repository": {
    "type": "git",
    "url": "git://github.com/bashofmann/node_oexchange.git"
  },
  "dependencies": {
    "xml2js": ">= 0.1.11",
    "request": ">= 2.1.1"
  },
  "devDependencies": {},
  "main": "index",
  "engines": {
    "node": ">= 0.4.11"
  },
  "readme": "==============\nnode_oexchange\n==============\n\nA module for handling OExchange host discovery (see http://www.oexchange.org/).\n\nInstallation\n------------\n\n::\n\n npm install oexchange\n \nUsage\n-----\n\nFirst you have to require the oexchange package\n\n::\n\n  var oexchange = require('oexchange');\n  \nnode_oexchange exposes two methods:\n\n\"getSharingUrl\" which can be used to get a valid sharing URL based on a given hostname and sharing object. The sharing object can contain all fiels that are specified in the OExchange specification (see http://www.oexchange.org/spec/#offer-parameters)\n\n::\n\n var sharingObject = {\n     'url': 'http://www.example.com/foo',\n     'title': 'Example site'\n };    \n oexchange.getSharingUrl('www.researchgate.net', sharingObject, function(result) {\n\t console.log(result); // either the sharing url or \"false\"\n });\n \nand \"getSharingObject\" wich not only returns the sharing URL but also all other information that is specified in the OExchange XRD (see http://www.oexchange.org/spec/#discovery-targetxrd), so that you can build a linked sharing button for example\n\n::\n\n var sharingObject = {\n    'url': 'http://www.example.com/foo',\n    'title': 'Example site'\n };    \n oexchange.getSharingObject('www.researchgate.net', sharingObject, function(result) {\n\t console.log(result); // either the sharing object url or \"false\"\n\t // to render a the result sharing object you should use a templating language, e.g. Mustache.js (see https://github.com/janl/mustache.js/)\n\t var template = '<a href=\"{{sharingUrl}}\"><img src=\"{{icon32}}\" /></a>';\n\t var html = Mustache.to_html(template, sharingObject);\n });",
  "_id": "oexchange@0.1.1",
  "dist": {
    "shasum": "68449ea4d0a82d93ad45fb940cd5d25167dc1612"
  },
  "_from": "oexchange@0.1.1"
}
